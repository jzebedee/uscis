name: Build USCIS DB
on:
  schedule:
    - cron: '30 4 * * *'
  workflow_dispatch: 

# TS logic from simonw's https://github.com/simonw/til/blob/main/tailscale/tailscale-github-actions.md

env:
  IPTEST_URL: ${{ vars.IPTEST_URL }}
  STEALTH_IPTEST_URL: ${{ secrets.STEALTH_IPTEST_URL }}

jobs:
  get_exit_node_ip:
    runs-on: ubuntu-latest
    outputs:
      TS_EXIT_NODE_IP: ${{ steps.get_exit_node_ip.outputs.TS_EXIT_NODE_IP }}
    steps:
    - name: Connect to stealthnet
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci-uscis
        version: latest
        use-cache: 'true'
    - name: Get exit node IP
      id: get_exit_node_ip
      run: echo "TS_EXIT_NODE_IP=$(dig +short ${{ secrets.TS_EXIT_NODE }})" >> $GITHUB_OUTPUT
    - name: Verify exit node set
      run: |
        if [ -z $"{TS_EXIT_NODE_IP}" ]; then
          exit 1
        fi
  build_db:
    runs-on: ubuntu-latest
    needs: get_exit_node_ip
    env:
      TS_EXIT_NODE_IP: ${{ needs.get_exit_node_ip.outputs.TS_EXIT_NODE_IP }}
    outputs:
      dbname: ${{ steps.dbname.outputs.dbname }}
    steps:
    - uses: actions/checkout@v4
    - name: Download previous DB
      uses: robinraju/release-downloader@v1
      with:
        latest: true
        fileName: '*.db'
        out-file-path: 'prev'
    - name: Show IP before Tailscale
      run: ./curl_request_api.sh ${{ env.IPTEST_URL }}
    - name: Connect to stealthnet (exit node)
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        args: '--accept-dns=true --exit-node=${{ env.TS_EXIT_NODE_IP }}'
        tags: tag:ci-uscis
        version: latest
        use-cache: 'true'
    - name: Verify HTTP traffic is routed through exit node
      run: |
        echo "Available exit nodes:"
        tailscale status | grep 'exit node'

        ./curl_request_api.sh ${{ env.IPTEST_URL }}
        ./curl_request_api.sh ${{ env.STEALTH_IPTEST_URL }}
    - name: Build DB and changelog
      run: ./build_db.sh
      env:
        RATE: ${{ vars.SLOWMODE_RATE }}
        STEALTH: 1
        STEALTH_ENDPOINT: ${{ secrets.STEALTH_ENDPOINT }}
    - name: Disconnect stealthnet
      run: sudo tailscale down
    - name: Get DB name
      id: dbname
      run: echo "dbname=$(basename *.db .db)" >> $GITHUB_OUTPUT
    - name: Upload DB
      uses: actions/upload-artifact@v4
      with:
        name: uscis-db
        path: '${{ steps.dbname.outputs.dbname }}.db'
        if-no-files-found: error
    - name: Upload changelog
      uses: actions/upload-artifact@v4
      with:
        name: changelog
        path: |
          changelog.txt
          sqldiff.txt
        if-no-files-found: error
    - name: Build JSON DB
      if: always()
      run: sqlite3 responses.db -A -c *.json *.cookies
    - name: Upload JSON DB
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: responses-db
        path: 'responses.db'
        if-no-files-found: error
  publish_db:
    runs-on: ubuntu-latest
    needs: build_db
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: Download DB
        uses: actions/download-artifact@v4
      - name: Create daily release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ needs.build_db.outputs.dbname }}
          tag_name: ${{ needs.build_db.outputs.dbname }}
          body_path: 'changelog/changelog.txt'
          files: 'uscis-db/*.db'
          fail_on_unmatched_files: true